<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/1999/REC-html401-19991224/loose.dtd">
<!--Copyright 2011 AJAX, JSON and XML Consulting and Training by Andrew M. Andrews III (SM). All Rights Reserved.  "Andrew M. Andrews III", "AMA3", Andrew_M_Andrews_III, Any+Time and the Tre Design are trademarks and/or service marks of Andrew M. Andrews III. Use this site at your own risk. Use of this site for illegal or malicious purposes is prohibited.--><html lang="en-US"><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Any+Time™ DatePicker/TimePicker AJAX Calendar Widget - AJAX, JSON and XML Consulting and Training by Andrew M. Andrews III (SM)</title><meta http-equiv="Content-Language" content="en-US"><meta name="description" content="Any+Time(TM) datepicker/timepicker/calendar widget (AnyTime.picker) for jQuery and date/time/string parse/format utility (AnyTime.Converter). - Andrew M. Andrews III provides consulting and training services for AJAX, JSON, XML and related technologies in extranet (B2B), internet (B2C), intranet and other back-end and front-end server development projects."><meta http-equiv="Content-Script-Type" content="text/javascript"><meta name="keywords" content="datepicker,timepicker,date/time picker,calendar,ajax,date,time,date/time,jquery,widget,format,convert,javascript,Any+Time,AnyTime.picker,AnyTime.Converter,MySQL,jquery.js,ajax,json,andrew m andrews iii,andrew andrews,andrew andrews iii,andrew m andrews,andrews,andrew,ama3,ama,ajax development,ajax training,ajax programming,xml"><meta name="keyword" content="datepicker,timepicker,date/time picker,calendar,ajax,date,time,date/time,jquery,widget,format,convert,javascript,Any+Time,AnyTime.picker,AnyTime.Converter,MySQL,jquery.js,ajax,json,andrew m andrews iii,andrew andrews,andrew andrews iii,andrew m andrews,andrews,andrew,ama3,ama,ajax development,ajax training,ajax programming,xml"><link rel="stylesheet" media="screen" href="/PxSite/PxSite.html.css"><link rel="alternate" type="text/html" href="http://www.ama3.com/anytime/?pxCT=text%2Fhtml" title="This page in text/html format."></head><body><span id="pxNote" style="font-family:monospace"></span><div id="title"><a href="/"><img src="/PxSite/tre.light.50x50.png" height="50" width="50">
    Andrew_M_Andrews_III =<br>
    ( AJAX + JSON + XML ) * ( Consulting + Training );</a></div><div class="mainMenu"><div class="mainMenuButton" style="width:60px"><div class="mainMenuButtonOffset"></div></div><div class="mainMenuButton"><div class="mainMenuButtonOffset"><a class="mainMenu" href="http://www.ama3.com/" title="Got AJAX?">Got AJAX?</a></div></div><div class="mainMenuButton"><div class="mainMenuButtonOffset"><a class="mainMenu" href="http://www.ama3.com/anytime/" title="Any+Time™">Any+Time™</a></div></div><div class="mainMenuButton"><div class="mainMenuButtonOffset"><a class="mainMenu" href="http://www.ama3.com/whois/" title="Whois Search">Whois Search</a></div></div><div class="mainMenuButton"><div class="mainMenuButtonOffset"><a class="mainMenu" href="http://www.ama3.com/user/" title="Client Area">Client Area</a></div></div><div class="mainMenuButton"><div class="mainMenuButtonOffset"><a class="mainMenu" href="http://www.ama3.com/doorkeeper/" title="Contact">Contact</a></div></div></div><div id="pageContainerBackground"><div class="pageContainer"><h1>Any+Time™ DatePicker/TimePicker AJAX Calendar Widget</h1><div id="mainContent"><style type="text/css">
    .newFeature
    {
        background-color: #FFFF66;/*rgb(93, 176, 230);*/
        border: 1px dashed #4c4c66;
        font-family: Days;
        padding: 0 0.1em;
    }
    .demo
    {
        border:4px solid #c0c0c0;
        border-top:20px solid #c0c0c0;
        margin:1em;
        padding:1em 2em;
    }
    pre
    {
        background-color:#f0f0f0;
        border:1px dashed #333367;
        display:block;
        margin:1em;
        padding:0.5em 0 0.5em 1.2em;
    }
  </style><p>
    The <strong>Any+Time&trade;
    JavaScript Library</strong> includes a highly-customizable,
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.jquery.com">jQuery</a>-compatible datepicker/
    timepicker (calendar/ clock widget) and a powerful Date/String parse/format utility.
  </p><div class="quotebox"><blockquote cite="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.drweb.deZ22FmagazinZ22Fjquery-die-interessantesten-aktuellen-plugins-und-toolsZ22F">
            der Mercedes, ach was, der Rolls Royce unter den Datepicker-Plugins<br><i>(the Mercedes, no, the Rolls Royce of Datepicker Plugins)</i></blockquote><cite>&mdash; <img src="drweb.de.png" style="height:16px;width:16px" alt="[logo]"> 
          <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.drweb.deZ22FmagazinZ22Fjquery-die-interessantesten-aktuellen-plugins-und-toolsZ22F" title="read the review on drweb.de" style="color:#9C9C9C;font-family:Helvetica,Arial,sans-serif"><span style="color:#397BB5;font-weight:bold">dr</span>web</a></cite></div><form method="GET" action="/anytime/" style="float:right;width:33em;margin-bottom:1em;margin-left:1em;margin-top:1em"><iframe frameborder="0" scrolling="no" src="themerollerdemo.html" style="height:26em;width:33em"></iframe><div class="divCaption" style="text-align:center"><strong>Above: </strong>
        example datepicker and timepicker, with selectable themes
        (using jQuery UI  <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fjqueryui.comZ22FdocsZ22FThemingZ22FThemeSwitcher">Theme Switcher</a>).
        <a name="InlineDemo"><strong>Below: </strong></a>
        Date/time picker using default style, hidden field,
        a 24-hour clock and both era and timezone selection,
        followed by the single JavaScript statement to create it!
        Click the buttons on any of these widgets to change values.
        <a href="#PopupDemos">Examples of pop-up pickers</a>
        and other variations follow.
      </div><div style="padding:1em 1em 1em 1em"><input type="text" id="DateTimeDemo" value="2010-04-20 04:20:10 (CE) +0"></div><pre><code>&lt;input type="text" id="DateTimeDemo" /&gt;
&lt;script type="text/javascript"&gt;
  $("#DateTimeDemo").<a href="#jQuery.AnyTime_picker">AnyTime_picker</a>(
      { <a href="#AnyTime.Converter.format">format</a>: "%Y-%m-%d %H:%i:%s %E %#",
        <a href="#AnyTime.picker.formatUtcOffset">formatUtcOffset</a>: "%: (%@)",
        <a href="#AnyTime.picker.hideInput">hideInput</a>: true,
        <a href="#AnyTime.picker.placement">placement</a>: "inline" } );
&lt;/script&gt;</code></pre><div class="quotebox"><blockquote cite="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.dotconcepts.netZ22FblogZ22Fdesign-resources-calendar-and-clock-widgets">
          more customizations than any date picker we've ever seen
      </blockquote><cite>&mdash; <img src="dotconcepts.net.png" style="height:16px;width:16px" alt="[logo]"> 
        <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.dotconcepts.netZ22FblogZ22Fdesign-resources-calendar-and-clock-widgets" title="DotConcepts" style="color:#6db846;font-family:Helvetica,Arial,sans-serif;font-size:16px">Michelle Kinney, <span style="color:#ce9f16">Dot</span><span style="color:#333">Concepts</span></a></cite></div><p class="standout" style="padding:1em">
        Rip out your old date/time pickers, and drop in
        <strong>Any+Time</strong>&trade;
        this instant! Hurry, before you lose another frustrated user!
      </p><div class="quotebox"><blockquote cite="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.opcmf.comZ22FdatetimepickerZ22F">
          the best date/time picker out there
      </blockquote><cite>&mdash; <img src="opcmf.com.png" style="height:16px;width:16px" alt="[logo]"> 
        <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.opcmf.comZ22FdatetimepickerZ22F" title="The Open Portal Content Module Framework" style="color:#83AF95;font-family:Helvetica,Arial,sans-serif;font-size:16px">Peter Drinnan, OPCMF</a></cite></div></form><p class="standout">Sexy is                       <br><strong style="font-size:x-large">OVER-RATED</strong>.
  </p><p class="standout">Let's try<br><strong style="font-size:x-large">USER-FRIENDLY</strong>.
  </p><p>
    It seems like there's a million calendar and clock widgets out there,
    and when you look past the eye-candy, they all have one thing in common: 
    they're <strong style="text-decoration:underline">tedious</strong>
    at best.  At worst,
    <strong style="text-decoration:underline">counter-intuitive</strong>.
  </p><p>
    Sure, a picker that uses sliders or spinners, or looks like an analog clock
    face might be <em>cute</em>, but did you ever notice how long it takes
    to position one to the correct hour and minute?  Or how about choosing a month
    that's more than a season away?  Worse yet, entering your
    birth year on a datepicker that forces you to click...
    backwards... repeatedly... one... year... at... a... time?
  </p><p>
    Does your favorite "pretty" picker even work if your
    user has a keyboard, but not a mouse?
    Does it scale larger if the user increases
    the text size on your page?
    If not, ask your legal department how they'd feel about
    an accessibility lawsuit!
  </p><p class="standout">Enough already!</p><p><strong>Any+Time&trade;</strong>
    is different.  More powerful, yes, but more importantly,
    designed with speed and ease-of-use in mind.
    And not only can it create a date/time picker with advanced
    features and options not found in other calendar/clock widgets,
    it also allows you to format dates and times the way <strong>you</strong>
    want them.  Or your database wants them.  Or, better yet, the way your
    <strong style="text-decoration:underline">users</strong>
    want them.
  </p><p>
    And you can still <strong>make it sexy</strong>,
    with plenty of styling options.
    <code><strong>;)</strong></code></p><p>
    For starters, take a look at these
    DATE/TIME ALTERNATIVES:
  </p><ul><li>12-hour or 24-hour clock</li><li>custom date/time <a href="#AnyTime.Converter.format">format</a> (countless possibilities,
        including <a href="#json">JSON</a> and <a href="#xml">XML</a>)</li><li>date-only, time-only, or specific <a href="#AnyTime.Converter.format">fields</a>!</li><li>date/time <a href="#AnyTime.picker.earliest">range</a> <a href="#AnyTime.picker.latest">limits</a></li><li><a href="#AnyTime.picker.askEra">era</a>-selection (BCE/CE, BC/AD, etc.)</li><li><a href="#AnyTime.picker.firstDOW">start</a> week on any day (Sunday, Monday, etc.)</li><li>custom <a href="#AnyTime.Converter.baseYear">base</a> for 2-digit years (1900, 2000, etc.)</li><li><a href="#AnyTime.utcLabel">UTC offsets</a> and time zones</li></ul><p>Then peep these STYLING CHOICES:</p><ul><li>custom <a href="#AnyTime.picker.labelDayOfMonth">labels</a>/languages</li><li>custom CSS <a href="#customStyles">styles</a></li><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fdocs.jquery.comZ22FUIZ22FTheming">jQuery UI Theming</a></li><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fjqueryui.comZ22FdocsZ22FThemingZ22FThemeSwitcher">jQuery UI Theme Switcher</a></li><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fjqueryui.comZ22FthemerollerZ22F">jQuery ThemeRoller</a></li><li><a href="#AnyTime.picker.placement">pop-up</a> or
      <a href="#AnyTime.picker.placement">always-present</a> picker</li><li>visible or
      <a href="#AnyTime.picker.hideInput">hidden</a> field</li></ul><p>It's also PROGRAMMER-FRIENDLY:</p><ul><li>easy to <a href="#PopupDemos">implement</a></li><li>easy <a href="#AnyTime.picker.ajaxOptions">AJAX</a> validation</li><li>easy Date/String <a href="#converting">conversion</a>, including
        <a href="#json">JSON</a> and <a href="#xml">XML</a></li><li>create <a href="#PopupDemos">multiple</a> pickers at once </li><li>easy <a href="#AnyTime.noPicker">removal</a> </li><li>easy to <a href="#extending">extend</a></li></ul><p>And let's not forget those USABILITY FEATURES:</p><ul><li>single-click value selection</li><li>double-click select-and-dismiss </li><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.w3.orgZ22FTRZ22F2009Z22FWD-wai-aria-practices-20091215Z22FZ223datepicker">WAI-ARIA 1.0</a> keyboard accessibility</li><li>em-based relative-size</li></ul><p>
    A <a href="#PopupDemos">single JavaScript statement</a> is all you need to add
    a date and/or time picker to any <code>&lt;input&gt;</code> field!
    Srsly. See the example code?  It's for reals, yo.
  </p><p>
    Use <a href="#converting"><var><strong>AnyTime.Converter</strong></var></a>
    to parse a String into a Date, or convert a Date to a String.  Many
    <a href="#AnyTime.Converter.format">format options</a> are
    supported&#8212;in fact, most of the fields specified by the MySQL
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fdev.mysql.comZ22FdocZ22FrefmanZ22F5.0Z22FenZ22Fdate-and-time-functions.htmlZ223function_date-format"><var>DATE_FORMAT()</var></a> function!
  </p><div style="background-color:black;border:6px solid black;color:#f0f0f0;float:left;font-size:x-small;margin:18px 16px 10px 8px;text-align:center"><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.jquery.com" title="jQuery website"><img src="jQuery.gif" width="81" height="23" style="vertical-align:top" alt="jQuery"></a><br>compatible
  </div><p><strong>Any+Time</strong>&trade;
    uses the free <em><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.jquery.com" title="jQuery website">jQuery</a>
    JavaScript Library</em> as a foundation for robust performance.
    An older version (2.x) of this library, based on Prototype,
    is still <a href="#prototype">available</a> also.
  </p><p style="clear:left"><strong>Any+Time</strong>&trade;
    has been tested compatible with
    Chrome 4.1, Firefox 3.6, Internet Explorer 8.0,
    Opera 10.51 and Safari 4.0,
    and should work with any version of ECMA-262
    (JavaScript, JScript, ECMAScript, etc.) and HTML/XHTML supported by
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.jquery.com" title="jQuery website"><em>jQuery</em></a>.
  </p><p><strong>Any+Time</strong>&trade;
    follows <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.w3.orgZ22FTRZ22F2009Z22FWD-wai-aria-practices-20091215Z22FZ223datepicker">WIA-ARIA Authoring Practices 1.0</a>
    for Date Picker keyboard interaction as closely as possible, to
    maximize accessibility without a mouse. Use <kbd>Tab</kbd>
    to navigate between the date and time sections, and arrows
    to navigate between time-selection buttons.
  </p><link rel="stylesheet" type="text/css" href="AnyTime/anytimec.css"><script type="text/javascript" src="AnyTime/jquery.js"></script><script type="text/javascript" src="AnyTime/anytimec.js"></script><script type="text/javascript" src="AnyTime/anytimetz.js"></script><script type="text/javascript">
    $("#DateTimeDemo").AnyTime_picker(
        { format: "%Y-%m-%d %H:%i:%s %E %#",
        formatUtcOffset: "%: (%@)",
        hideInput: true,
        placement: "inline" });
  </script><div style="float:left;margin:18px 16px 12px 8px"><a rel="license" href=""><img alt="Creative Commons License" style="border-width:0px" src="cc-by-nc-sa-88x31.png"></a></div><p><strong>Any+Time</strong>&trade;
    is
    <span style="background-color:#EFE;border:1px solid #060;color:#060;font-family:serif;font-size:8pt;font-weight:bold;padding:4px 4px 4px 4px">
      $<strong style="font-size:12pt"> FREE </strong>$</span>
    under the Creative Commons BY-NC-SA 3.0
    <a href="" title="read the license">License</a>.
    <strong> Tip: </strong> site owners can avoid the need for a commercial license by not
    charging users to access any page that uses the library; site developers can avoid the
    need for a commercial license by not charging clients to add the library to their site
    or to modify the library (code that invokes the library functionality and CSS styles
    that override the default appearance are not considered modifications as long as the
    original source files are not modified in any way).
    A good rule of thumb is: "If nobody has to pay to use
    <strong>Any+Time</strong>&trade;,
    then nobody has to pay to use
    <strong>Any+Time</strong>&trade;!"
    <strong> If you need a commercial license (or aren't sure), please
    <a href="http://www.ama3.com/doorkeeper/" title="contact page">contact the author</a></strong>
    for terms and conditions tailored to your needs.
  </p><h2>Instructions</h2><div class="quotebox" style="float:right;width:24em;margin-bottom:1em;margin-left:1em;margin-top:1em"><blockquote cite="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.opcmf.comZ22FdatetimepickerZ22F">
        it’s so good I think I will replace all my Ajax date pickers with this one
    </blockquote><cite>&mdash; <img src="lackingdevelopment.com.png" style="height:16px;width:16px" alt="[logo]"> 
      <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.lackingdevelopment.comZ22F2010Z22F08Z22F27Z22Fgreat-jquery-date-time-picker-controlZ22F" title="Steve Kinsey's website" style="color:#015057;font-family:Helvetica,Arial,sans-serif;font-size:16px">Steve Kinsey, LackingDevelopment</a></cite></div><p>
    Follow these easy steps to use the
    <strong>Any+Time&trade;
    JavaScript Library</strong> on your website!
  </p><h3 style="clear:left">1. Download</h3><p><strong>Any+Time</strong>&trade;
    consists of a JavaScript source file
    with a CSS stylesheet file. Both files are formatted to
    be human-readable, and they contain extensive comments to help you
    understand and modify them. Right-click on either link to save the file:
  </p><ul class="doubleSpace"><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytime.js" title="commented, formatted javascript source">anytime.js</a>
      - readable JavaScript source</li><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytime.css" title="commented, formatted stylesheet">anytime.css</a>
      - readable CSS stylesheet</li></ul><div class="quotebox" style="float:right;width:24em;margin-bottom:1em;margin-left:1em;margin-top:1em"><blockquote cite="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.technogadge.comZ22Fdownload-anytime-date-time-pickerZ22F">
        extremely easy to use
    </blockquote><cite>&mdash; <img src="technogadge.com.png" style="height:16px;width:16px" alt="[logo]"> 
      <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.technogadge.comZ22Fdownload-anytime-date-time-pickerZ22F" title="read the review on technogadge.com" style="color:#383838;font-family:Helvetica,Arial,sans-serif"><span style="color:#E11100">Techno</span>Gadge</a></cite></div><p>
    You may wish to use the compressed (unformatted, no comments) versions
    instead, to improve download speed for your users:
  </p><ul class="doubleSpace"><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytimec.js" title="compressed javascript source">anytimec.js</a>
      - compressed JavaScript source</li><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytimec.css" title="compressed stylesheet">anytimec.css</a>
      - compressed CSS stylesheet</li></ul><div class="quotebox" style="float:right;width:24em;margin-bottom:1em;margin-left:1em;margin-top:1em"><blockquote cite="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.opcmf.comZ22FdatetimepickerZ22F">
        Grade A: Extensively customisable and scriptable.
    </blockquote><cite>&mdash; <img src="tardate.com.png" style="height:16px;width:16px" alt="[logo]"> 
      <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Ftardate.comZ22FjQueryDateTimeZ22Findex.htm" title="Paul Gallagher's website" style="color:##1C1C1C;font-family:Helvetica,Arial,sans-serif;font-size:16px">Paul Gallagher, tardate</a></cite></div><p>
    A copy of
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.jquery.com" title="download jQuery"><em>jQuery</em></a>
    is also required:
  </p><ul class="doubleSpace"><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fcode.jquery.comZ22Fjquery-1.4.2.min.js" title="production (minified) jQuery source file">jquery-1.4.2.min.js</a>
      - production (compressed) jQuery source</li></ul><p>
    If you want to display locale-specific time zone labels, or allow users to select
    different UTC offsets with the timepicker,
    also get the Basic Time Zone Support file (and <a href="#AnyTime.utcLabel">modify</a>
    it to meet your needs):
  </p><ul class="doubleSpace"><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytimetz.js" title="commented, formatted javascript time zone support source">anytimetz.js</a>
      - readable JavaScript source for Basic Time Zone Support</li></ul><div style="background-color:#f0f0f0;margin-top:1em;padding:0.5em 1em 1em 1em"><h4><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.prototypejs.orgZ22F" name="prototype" title="prototype website"><img src="prototypejs.png" width="38" height="16" style="vertical-align:top" alt="prototype"></a> PROTOTYPE LIBRARY USERS:</h4><p>
    Version 2.x uses the
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.prototypejs.orgZ22F">Prototype</a> JavaScript Framework
    (prototype.js) instead of jQuery.  This older version is still
    available:
  </p><ul class="doubleSpace"><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytime.prototype.js" title="commented, formatted javascript source">anytime.prototype.js</a>
      - Prototype-compatible, readable JavaScript source</li><li><a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytime.prototype.css" title="commented, formatted stylesheet">anytime.prototype.css</a>
      - Prototype-compatible, readable CSS stylesheet</li></ul><p>
    Many of the features and behaviors described on this page are different or unavailable
    in the older version (check the source file comments for more accurate instructions
    and information).
  </p></div><h3>2. Save and Include</h3><p>
    Save a copy of the JavaScript source and CSS stylesheet files
    on your web server, <strong>remove the last line from the
    JavaScript file</strong>, and reference both files in your HTML page.
    For example, if you install jquery.js, anytime.js and anytime.css
    in the document root directory, then add the following lines to the
    <code>&lt;head&gt;</code> section of the HTML page:
  </p><pre><code>&lt;link rel="stylesheet" type="text/css" href="/anytime.css" /&gt;
&lt;script type="text/javascript" src="/jquery.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/anytime.js"&gt;&lt;/script&gt;</code></pre><p>
    If you downloaded Basic Time Zone Support, be sure to include it last:
  </p><pre><code>&lt;script type="text/javascript" src="/anytimetz.js"&gt;&lt;/script&gt;</code></pre><p>
    For proper formatting, the <code>&lt;link&gt;</code> element must appear
    <strong>before </strong> the <code>&lt;script&gt;</code> elements!
  </p><h3>3. Create HTML Input Fields</h3><p>
    Create your date and/or time field as a simple
    <code>&lt;input type="text"&gt;</code> element with a unique
    <var>id</var> attribute.
  </p><p>
    Here are examples of a date-only field that uses a verbose format,
    and a time-only field with a Spanish label:
  </p><pre><code>English: &lt;input type="text" id="field1" size="50"
    value="Sunday, July 30th in the Year 1967 CE" /&gt;&lt;br/&gt;
Español: &lt;input type="text" id="field2" value="12:34" /&gt;
</code></pre><h3>4. Add <a name="PopupDemos">JavaScript</a> (and optional <a name="customStyles">CSS</a>)</h3><p>
    Call <a href="#AnyTime.picker"><var><strong>AnyTime.picker()</strong></var></a> in your JavaScript code,
    passing it the <var>id</var> of the input element and any desired <a href="#options"><var>options</var></a>.
    Or, use jQuery methods (such as <var><strong>$()</strong></var> or
    <var><strong>$.find()</strong></var>) to select
    one-or-more elements and invoke
    <a href="#jQuery.AnyTime_picker"><var><strong>.AnyTime_picker()</strong></var></a> 
    on the result, passing the desired <a href="#options"><var>options</var></a>.
    For example, the code to add pickers to the preceding example fields could be:
  </p><pre><code>&lt;script type="text/javascript"&gt;
  <a href="#AnyTime.picker">AnyTime.picker</a>( "field1",
      { <a href="#AnyTime.Converter.format">format</a>: "%W, %M %D in the Year %z %E", <a href="#AnyTime.picker.firstDOW">firstDOW</a>: 1 } );
  $("#field2").<a href="#jQuery.AnyTime_picker">AnyTime_picker</a>(
      { <a href="#AnyTime.Converter.format">format</a>: "%H:%i", <a href="#AnyTime.picker.labelTitle">labelTitle</a>: "Hora",
        <a href="#AnyTime.picker.labelHour">labelHour</a>: "Hora", <a href="#AnyTime.picker.labelMinute">labelMinute</a>: "Minuto" } );
&lt;/script&gt;</code></pre><p>
    Want a live demonstration?  Click one of the following text fields to
    display the corresponding popup picker! For the first field, try
    choosing a year in the very distant past.
  </p><style type="text/css">
    #field2 { background-image:url("clock.png");
      background-position:right center; background-repeat:no-repeat;
      border:1px solid #FFC030;color:#3090C0;font-weight:bold}
    #AnyTime--field2 {background-color:#EFEFEF;border:1px solid #CCC}
    #AnyTime--field2 * {font-weight:bold}
    #AnyTime--field2 .AnyTime-btn {background-color:#F9F9FC;
      border:1px solid #CCC;color:#3090C0}
    #AnyTime--field2 .AnyTime-cur-btn {background-color:#FCF9F6;
        border:1px solid #FFC030;color:#FFC030}
    #AnyTime--field2 .AnyTime-focus-btn {border-style:dotted}
    #AnyTime--field2 .AnyTime-lbl {color:black}
    #AnyTime--field2 .AnyTime-hdr {background-color:#FFC030;color:white}
  </style><form method="GET" action="/anytime/"><p class="demo">
      English: <input type="text" id="field1" size="50" value="Sunday, July 30th in the Year 1967 CE"><br>
      Español: <input type="text" id="field2" value="12:34"></p></form><script type="text/javascript">
    AnyTime.picker( "field1", { format: "%W, %M %D in the Year %z %E",
                              firstDOW: 1 } );
    $("#field2").AnyTime_picker( { format: "%H:%i", labelTitle: "Hora",
                              labelHour: "Hora", labelMinute: "Minuto" } );
  </script><p>
    The first field specifies that the week begins with Monday.
  </p><p>
    The second field demonstrates a custom style,
    including a clock pseudo-button for the input field,
    achieved by the following CSS:
  </p><pre><code>&lt;style type="text/css"&gt;
  #field2 { background-image:url("<a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22Fclock.png" title="right-click to download this image for use with your input field">clock.png</a>");
    background-position:right center; background-repeat:no-repeat;
    border:1px solid #FFC030;color:#3090C0;font-weight:bold}
  #AnyTime--field2 {background-color:#EFEFEF;border:1px solid #CCC}
  #AnyTime--field2 * {font-weight:bold}
  #AnyTime--field2 .AnyTime-btn {background-color:#F9F9FC;
    border:1px solid #CCC;color:#3090C0}
  #AnyTime--field2 .AnyTime-cur-btn {background-color:#FCF9F6;
      border:1px solid #FFC030;color:#FFC030}
  #AnyTime--field2 .AnyTime-focus-btn {border-style:dotted}
  #AnyTime--field2 .AnyTime-lbl {color:black}
  #AnyTime--field2 .AnyTime-hdr {background-color:#FFC030;color:white}
&lt;/style&gt;</code></pre><p>
    Refer to the CSS <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytime.css">stylesheet</a> for additional
    details and instructions on custom styles.
  </p><p>
    Be sure to create the picker
    <em>after</em> the text field has been added to the page, either by placing
    your <code>&lt;script&gt;</code> element after the <code>&lt;input&gt;</code>
    element, or using jQuery's <code>$(document).ready()</code> function.
  </p><h2><a name="options">Options</a> and Format Specifiers</h2><p>
    When creating a picker with
    <a href="#AnyTime.picker"><var>AnyTime.picker()</var></a> or
    <a href="#jQuery.AnyTime_picker"><var>$.AnyTime_picker()</var></a>,
    the following members may be specified as part of
    the <a href="#AnyTime.picker"><var>options</var> argument</a>.
    Options that are also supported by
    <a href="#AnyTime.Converter"><var>AnyTime.Converter</var></a>
    are denoted by a dagger
    (<strong>&dagger;</strong>) symbol:
  </p><dl style="padding-left:2em"><dt><a name="AnyTime.picker.ajaxOptions"><var>ajaxOptions</var></a></dt><dd>Options to pass to jQuery's <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fdocs.jquery.comZ22FAjaxZ22FjQuery.ajax"><code>$.ajax()</code></a>
      method whenever the user dismisses a popup picker or selects a value in
      an inline picker.  The input's <var>name</var> (or <var>id</var>) and
      value are passed to the server (appended to <var>ajaxOptions.data</var>,
      if present), and the "<var>success</var>" handler sets the input's value
      to the responseText. Therefore, the text returned by the server must be
      valid for the input's date/time
      <a href="#AnyTime.Converter.format"><var>format</var></a>,
      and the server must either echo or correct the value chosen by the user.
      For example, the server for the following AJAX-enabled picker
      always changes the day-of-the-month to <samp>1</samp> after the
      component is dismissed, no matter what day the user actually
      selects:
<pre><code>First-of-month: &lt;input type="text" id="AjaxDemo" value="Apr 1, '10"/&gt;
&lt;script type="text/javascript"&gt;
  <a href="#AnyTime.picker">AnyTime.picker</a>( "AjaxDemo",
      { <a href="#AnyTime.picker.ajaxOptions">ajaxOptions</a>: { url: "ajaxdemo.php" },
        <a href="#AnyTime.Converter.baseYear">baseYear</a>: 2000,
        <a href="#AnyTime.picker.earliest">earliest</a>: new Date(2000,0,1,0,0,0),
        <a href="#AnyTime.Converter.format">format</a>: "%b %e, '%y"
        <a href="#AnyTime.picker.latest">latest</a>: new Date(2099,11,31,23,59,59)
      } );
&lt;/script&gt;</code></pre><form action="/anytime/"><p class="demo">
            First-of-month: <input type="text" id="AjaxDemo" value="Apr 1, '10"></p></form>
      If <var>ajaxOptions.success</var> is specified, it is used
      <em>instead of </em>the default "success" behavior. Refer to the
      <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fdocs.jquery.comZ22FAjaxZ22FjQuery.ajax">jQuery</a> documentation for information about
      that library's Ajax options.</dd><dt><a name="AnyTime.picker.askEra"><var>askEra</var></a></dt><dd>If true, buttons to select the era (BCE/CE) are shown on the year
      selector popup, even if the
      <a href="#AnyTime.Converter.format"><var>format</var></a>
      specifier does not include the
      era. If false, buttons to select the era are NOT shown, even if the
      format specifier includes the era.  Normally, era buttons are only
      shown if the format string specifies the era.</dd><dt><a name="AnyTime.picker.askSecond"><var>askSecond</var></a></dt><dd>If false, buttons for number-of-seconds are not shown on the
      year selector popup, even if the
      <a href="#AnyTime.Converter.format"><var>format</var></a>
      specifier includes seconds. Normally,
      the buttons are shown if the format string specifies seconds.</dd><dt><a name="AnyTime.Converter.baseYear"><var>baseYear</var></a>&dagger;</dt><dd>the number to add to two-digit years if the <code>"%y"</code> <a href="#AnyTime.Converter.format"><var>format</var></a>
      specifier is used.
      By default, the <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fdev.mysql.comZ22FdocZ22FrefmanZ22F5.1Z22FenZ22Fy2k-issues.html">MySQL convention</a>
      that two-digit years are in the range 1970 to 2069 is used.
      The most common alternatives are 1900 and 2000.
      When using this option, you should also specify the
      <a href="#AnyTime.picker.earliest"><var>earliest</var></a> and
      <a href="#AnyTime.picker.latest"><var>latest</var></a> options to the
      first and last dates in the century, respectively.
      Refer to the
      <a href="#AnyTime.picker.ajaxOptions"><var>ajaxOptions</var> example</a>.</dd><dt><a name="AnyTime.Converter.dayAbbreviations"><var>dayAbbreviations</var></a>&dagger;</dt><dd>An array of day abbreviations to replace
      <samp>Sun</samp>, <samp>Mon</samp>, etc.
      <strong>Note: </strong> if a different first day-of-week is specified by option
      <a href="#AnyTime.picker.firstDOW"><var>firstDOW</var></a>,
      this array should nonetheless
      start with the desired abbreviation for <samp>Sunday</samp>.</dd><dt><a name="AnyTime.Converter.dayNames"><var>dayNames</var></a>&dagger;</dt><dd>An array of day names to replace
      <samp>Sunday</samp>, <samp>Monday</samp>, etc.
      <strong>Note: </strong> if a different first day-of-week is specified by option
      <a href="#AnyTime.picker.firstDOW"><var>firstDOW</var></a>,
      this array should nonetheless
      start with the desired name for <samp>Sunday</samp>.</dd><dt><a name="AnyTime.picker.earliest"><var>earliest</var></a></dt><dd>String or Date object representing the earliest date/time that
      a user can select.  If a String is specified, it is expected to
      match the
      <a href="#AnyTime.Converter.format"><var>format</var></a>
      specifier.
      For best results if the field is only used to specify a date,
      be sure to set the time to <code>00:00:00</code>.
      Refer to the
      <a href="#AnyTime.picker.ajaxOptions"><var>ajaxOptions</var></a>
      and <a href="#extending">extending</a> examples.
    </dd><dt><a name="AnyTime.Converter.eraAbbreviations"><var>eraAbbreviations</var></a>&dagger;</dt><dd>An array of era abbreviations to replace
      <samp>BCE</samp> and <samp>CE</samp>.  The most common
      replacements are the obsolete:
      <samp>BC</samp> and <samp>AD</samp>.</dd><dt><a name="AnyTime.picker.firstDOW"><var>firstDOW</var></a></dt><dd>a value from 0 (Sunday) to 6 (Saturday) stating which day should
      appear at the beginning of the week.  The default is <samp>0</samp>
      (Sunday).  The most common substitution is <samp>1</samp> (Monday).
      <strong>Note: </strong> if custom arrays are specified for
      <a href="#AnyTime.Converter.dayAbbreviations"><var>dayAbbreviations</var></a> and
      <a href="#AnyTime.Converter.dayNames"><var>dayNames</var></a>, they should nonetheless
      begin with the desired value for <samp>Sunday</samp>.
      Refer to the earlier <a href="#PopupDemos">popup examples</a>.</dd><dt><a name="AnyTime.Converter.format"><var>format</var></a>&dagger;</dt><dd>string specifying the date/time format. The following format
      <a name="specifiers">specifiers</a> are recognized:
      <table><thead><tr><th>specifier</th><th>meaning</th></tr></thead><tbody><tr><td><code>%a</code></td><td>Abbreviated weekday name (<samp>Sun</samp>...<samp>Sat</samp>)</td></tr><tr><td><code>%B</code></td><td>Abbreviation for Before Common Era (if year&lt;1)*</td></tr><tr><td><code>%b</code></td><td>Abbreviated month name (<samp>Jan</samp>...<samp>Dec</samp>)</td></tr><tr><td><code>%C</code></td><td>Abbreviation for Common Era (if year&gt;=1)*</td></tr><tr><td><code>%c</code></td><td>Month, numeric (<samp>1</samp>..<samp>12</samp>)</td></tr><tr><td><code>%D</code></td><td>Day of the month with English suffix (<samp>1st</samp>, <samp>2nd</samp>, ...)</td></tr><tr><td><code>%d</code></td><td>Day of the month, numeric (<samp>00</samp>...<samp>31</samp>)</td></tr><tr><td><code>%E</code></td><td>Era abbreviation*</td></tr><tr><td><code>%e</code></td><td>Day of the month, numeric (<samp>0</samp>...<samp>31</samp>)</td></tr><tr><td><code>%H</code></td><td>Hour (<samp>00</samp>...<samp>23</samp>)</td></tr><tr><td><code>%h</code></td><td>Hour (<samp>01</samp>...<samp>12</samp>)</td></tr><tr><td><code>%I</code></td><td>Hour (<samp>01</samp>...<samp>12</samp>)</td></tr><tr><td><code>%i</code></td><td>Minutes, numeric (<samp>00</samp>...<samp>59</samp>)</td></tr><tr><td><code>%k</code></td><td>Hour (<samp>0</samp>...<samp>23</samp>)</td></tr><tr><td><code>%l</code></td><td>Hour (<samp>1</samp>...<samp>12</samp>)</td></tr><tr><td><code>%M</code></td><td>Month name (<samp>January</samp>...<samp>December</samp>)</td></tr><tr><td><code>%m</code></td><td>Month, numeric (<samp>01</samp>...<samp>12</samp>)</td></tr><tr><td><code>%p</code></td><td><samp>AM</samp> or <samp>PM</samp></td></tr><tr><td><code>%r</code></td><td>Time, 12-hour (<samp>hh:mm:ss</samp> followed by <samp>AM</samp> or <samp>PM</samp>)</td></tr><tr><td><code>%S</code></td><td>Seconds (<samp>00</samp>...<samp>59</samp>)</td></tr><tr><td><code>%s</code></td><td>Seconds (<samp>00</samp>...<samp>59</samp>)</td></tr><tr><td><code>%T</code></td><td>Time, 24-hour (<samp>hh:mm:ss</samp>)</td></tr><tr><td><code>%W</code></td><td>Weekday name (<samp>Sunday</samp>...<samp>Saturday</samp>)</td></tr><tr><td><code>%w</code></td><td>Day of the week (<samp>0</samp>=Sunday...<samp>6</samp>=Saturday)</td></tr><tr><td><code>%Y</code></td><td>Year, numeric, four digits (possibly signed)</td></tr><tr><td><code>%y</code></td><td>Year, numeric, two digits (possibly signed)</td></tr><tr><td><code>%Z</code></td><td>Year, numeric, four digits (no sign)*</td></tr><tr><td><code>%z</code></td><td>Year, numeric, variable length (no sign)*</td></tr><tr><td><code>%#</code></td><td>Signed UTC offset in minutes* </td></tr><tr><td><code>%+</code></td><td>Signed UTC offset in <code>%h%i</code> format* </td></tr><tr><td><code>%-</code></td><td>Signed UTC offset in <code>%l%i</code> format* </td></tr><tr><td><code>%:</code></td><td>Signed UTC offset in <code>%h:%i</code> format* </td></tr><tr><td><code>%;</code></td><td>Signed UTC offset in <code>%l:%i</code> format* </td></tr><tr><td><code>%@</code></td><td>UTC offset time zone <a href="#AnyTime.utcLabel">label</a>* </td></tr><tr><td><code>%%</code></td><td>A literal <samp>%</samp> character</td></tr></tbody></table><br>
        The default format is <code>"%Y-%m-%d %T"</code>.<br><br>
        * <strong>Note: </strong> except for those delimited by an asterisk in the table above,
        these are the same format specifiers used by the MySQL database
        <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fdev.mysql.comZ22FdocZ22FrefmanZ22F5.0Z22FenZ22Fdate-and-time-functions.htmlZ223function_date-format"><var>DATE_FORMAT()</var></a> function.
        The default format is the one used for MySQL <var>DATETIME</var> and
        <var>TIMESTAMP</var> data types.<br><br>
        Any other character in the format string appears literally in the value.
        Any other sequence of percent sign ("%") followed by a character is
        reserved for future use, except for the following MySQL specifiers not
        implemented due to lack of support in JavaScript:
        <code>%f</code> (microseconds);
        <code>%j</code> (day-of-year);
        <code>%U</code>,
        <code>%u</code>,
        <code>%V</code> and
        <code>%v</code> (week-of-year); and
        <code>%X</code> and
        <code>%x</code> (year-for-week).
        Do not use format specifiers that are reserved or not implemented.<br><br>
        Specifiers and literal characters can be combined into more
        complex formats, such as <a href="#json">JSON</a> and
        <a href="#xml">XML</a>.
      </dd><dt><a name="AnyTime.picker.formatUtcOffset"><var>formatUtcOffset</var></a></dt><dd>string specifying the format of the UTC offset choices displayed in the picker.
      Although all <a href="#specifiers">specifiers</a> used by the
      <a href="#AnyTime.Converter.format"><var>format</var></a> option are recognized,
      only those pertaining to UTC offsets (namely
      <code>%#</code>, <code>%+</code>, <code>%-</code>, <code>%:</code>, <code>%;</code>
      and <code>%@</code>) should be used.  By default, the picker will extrapolate
      a format by scanning the <a href="#AnyTime.Converter.format"><var>format</var></a>
      option for appropriate specifiers and their surrounding characters.
      Refer to the <a href="#InlineDemo">date/time picker</a>
      near the beginning of this page for an example.</dd><dt><a name="AnyTime.picker.hideInput"><var>hideInput</var></a></dt><dd>if true, the <code>&lt;input&gt;</code> is "hidden" (the picker appears
      in its place). This actually sets the border, height, margin, padding
      and width of the field as small as possible, so it can still get focus.
      Refer to the <a href="#InlineDemo">date/time picker</a>
      near the beginning of this page for an example.
      <strong>Note: </strong> if you try to hide the field using traditional
      techniques (such as setting <code>display:none</code>), the picker will
      not behave correctly. This option should only be used with
      <a href="#AnyTime.picker.placement"><var>placement</var></a><code>:"inline"</code>;
      otherwise, a popup will only appear (seemingly from nowhere) if the user tabs to
      the hidden field.
      </dd><dt><a name="AnyTime.picker.labelDayOfMonth"><var>labelDayOfMonth</var></a></dt><dd>HTML to replace the <samp>Day of Month</samp> label</dd><dt><a name="AnyTime.picker.labelDismiss"><var>labelDismiss</var></a></dt><dd>HTML to replace the dismiss popup button's <samp>X</samp> label</dd><dt><a name="AnyTime.picker.labelHour"><var>labelHour</var></a></dt><dd>HTML to replace the <samp>Hour</samp> label.
      Refer to the earlier <a href="#PopupDemos">popup examples</a>.</dd><dt><a name="AnyTime.picker.labelMinute"><var>labelMinute</var></a></dt><dd>HTML to replace the <samp>Minute</samp> label.
      Refer to the earlier <a href="#PopupDemos">popup examples</a>.</dd><dt><a name="AnyTime.picker.labelMonth"><var>labelMonth</var></a></dt><dd>HTML to replace the <samp>Month</samp> label</dd><dt><a name="AnyTime.picker.labelSecond"><var>labelSecond</var></a></dt><dd>HTML to replace the <samp>Second</samp> label</dd><dt><a name="AnyTime.picker.labelTimeZone"><var>labelTimeZone</var></a></dt><dd>HTML to replace the <samp>Time Zone</samp> label</dd><dt><a name="AnyTime.picker.labelTitle"><var>labelTitle</var></a></dt><dd>HTML for the title of the picker. If not specified, the picker
      automatically selects a title based on the
      <a href="#AnyTime.Converter.format"><var>format</var></a>
      specifier fields.
      Refer to the earlier <a href="#PopupDemos">popup examples</a>.</dd><dt><a name="AnyTime.picker.labelYear"><var>labelYear</var></a></dt><dd>HTML to replace the <samp>Year</samp> label</dd><dt><a name="AnyTime.picker.latest"><var>latest</var></a></dt><dd>String or Date object representing the latest date/time that
      a user can select.  If a String is specified, it is expected to
      match the
      <a href="#AnyTime.Converter.format"><var>format</var></a>
      specifier.
      For best results if the field is only used to specify a date,
      be sure to set the time to 23:59:59.
      Refer to the
      <a href="#AnyTime.picker.ajaxOptions"><var>ajaxOptions</var></a>
      and <a href="#extending">extending</a> examples.
    </dd><dt><a name="AnyTime.Converter.monthAbbreviations"><var>monthAbbreviations</var></a>&dagger;</dt><dd>An array of month abbreviations to replace
      <samp>Jan</samp>, <samp>Feb</samp>, etc. <strong>Note: </strong> do not use an HTML
      entity reference (such as <code>&amp;auml;</code>) in a month name or abbreviation;
      embed the actual character (such as
      &auml;)
      instead.  Be careful to save your source files under the
      correct encoding, or the character may not display correctly in
      all browsers; this often happens when a character code from <var>UTF-8</var>
      is saved with <var>ISO-8859-1</var> encoding (or vice-versa).</dd><dt><a name="AnyTime.Converter.monthNames"><var>monthNames</var></a>&dagger;</dt><dd>An array of month names to replace
      <samp>January</samp>, <samp>February</samp>, etc.</dd><dt><a name="AnyTime.picker.placement"><var>placement</var></a></dt><dd>One of the following strings:
        <dl><dt><code>"popup"</code></dt><dd>the picker appears above its input when the input
            receives focus, and disappears when it is dismissed.
            This is the default behavior.</dd><dt><code>"inline"</code></dt><dd>the picker follows the <code>&lt;input&gt;</code> and remains
            visible at all times.  When choosing this placement, you might
            prefer to hide the input field using the
            <a href="#AnyTime.picker.hideInput"><var>hideInput</var></a>
            option (the correct value will still be
            submitted with the form).
            Refer to the <a href="#InlineDemo">date/time picker</a>
            near the beginning of this page for an example.
          </dd></dl></dd></dl><p><strong>&dagger;</strong>
    denotes options supported by
    <a href="#AnyTime.Converter"><var>AnyTime.Converter</var></a>.
  </p><script type="text/javascript">
    AnyTime.picker( "AjaxDemo",
        { ajaxOptions: { url: "ajaxdemo.php" },
          baseYear: 2000,
          earliest: new Date(2000,0,1,0,0,0),
          format: "%b %e, '%y",
          latest: new Date(2099,11,31,23,59,59)
        } );
  </script><h2><a name="AnyTime.utcLabel">UTC Offset/Time Zone</a> Customization</h2><p>
    Time zone determination is extremely complicated, and
    ECMA-262 (the JavaScript standard) provides very little native support. Although
    <strong>Any+Time</strong>&trade;
    is a significant improvement, some features may require additional modification
    to meet your needs.
  </p><h3>Default Functionality</h3><p>
    By default, <code>AnyTime.Converter</code> and any date/time picker created by
    <strong>Any+Time</strong>&trade;
    can parse and/or format offsets from Coordinated Universal Time (UTC) as minutes
    (<code>%#</code>) or hours-and-minutes (<code>%+</code>, <code>%-</code>,
    <code>%:</code> and <code>%;</code>).
  </p><p>
    UTC offsets can also be represented as time zone labels using the <code>%@</code>
    specifier.  By default, this uses the format "<samp>UTC±%h:%m</samp>",
    where "<samp>UTC</samp>" and "<samp>:</samp>" are literal characters,
    "<samp>±</samp>" is either a plus or minus sign (for before or after UTC),
    "<samp>%h</samp>" is the two-digit offset full-hours and
    "<samp>%m</samp>" is the two-digit offset remaining-minutes.
    For example, "<samp>UTC+05:30</samp>" represents five (5) hours and thirty
    (30) minutes ahead of Coordinated Universal Time.
  </p><h3>Offset Selection and Time Zone Labels</h3><p>
    If it is necessary to change the UTC offset using a date/time picker,
    or a list of locale-specific, human-friendly time zone labels are needed,
    then a member named <var>AnyTime.utcLabel</var> must be added to the
    library.  This can easily be accomplished by including the
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytimetz.js">anytimetz.js</a> file and modifying it
    as needed, usually by removing unwanted UTC offsets and/or altering the
    labels provided.
  </p><p><var>AnyTime.utcLabel</var> is an Array of Arrays.  The primary array
    is indexed by available UTC offsets <strong>in minutes</strong>
    (not hours-and-minutes). Plus-sign (<samp>+</samp>) must <strong>not</strong>
    be used for positive minutes.  Each sub-array contains one or more Strings;
    each String is a label for a possible time zone corresponding to the
    UTC offset.  For example, the file includes the definition:
  </p><pre><code>AnyTime.utcLabel[330]=[
    'IST--Indian Standard Time'
    ,'SLT--Sri Lanka Time'
    ];</code></pre><p>
    which means that "<samp>IST--Indian Standard Time</samp>" and
    "<samp>SLT--Sri Lanka Time</samp>" are the two possible labels
    for 330 minutes (or 5 hours, 30 minutes) before UTC.  The first
    label in a sub-array is the default label for that UTC offset,
    so IST will always be selected when
    <a href="#AnyTime.picker.formatUtcOffset"><var>formatUtcOffset</var></a>
    contains the <samp>%@</samp> specifier but
    <a href="#AnyTime.Converter.format"><var>format</var></a> does not.
  </p><p>
    Any label can be altered as desired (for example, you may want
    to show only abbreviations, or only long names).  Any unwanted
    label can be removed from the sub-array.  The sub-array for any
    unwanted UTC offset can be eliminated entirely, in which case
    the offset will not be offered by the picker.  This can be useful,
    for example, if you only want to allow time zones for a
    limited geographic area (such as a single nation or continent).
  </p><h3>Offset Conversion</h3><p>
    Normally, <var>AnyTime.Converter</var> assumes local time when it
    parses a String or formats a Date.  Conversion between local time
    and other UTC offsets is possible using two options:
  </p><dl style="padding-left:2em"><dt><a name="AnyTime.Converter.utcFormatOffsetImposed"><var>utcFormatOffsetImposed</var></a></dt><dd>offset from UTC, <strong>in minutes</strong>, to specify when
      <a href="#AnyTime.Converter.formatMethod">formatting</a> a Date object.
      This can be used to convert a local time to a different UTC offset.
      Refer to the <a href="#converting">example</a> in the next section.</dd><dt><var>utcParseOffsetAssumed</var></dt><dd>offset from UTC, <strong>in minutes</strong>, to assume when
        <a href="#AnyTime.Converter.parse">parsing</a> a String object.
        This can be used to convert a String created in a different
        UTC offset to local time.
        <strong>Note: </strong> if the <a href="#AnyTime.Converter.format">format</a>
        string contains a UTC offset <a href="#specifiers">specifier</a>
        (<code>%#</code>, <code>%+</code>, <code>%-</code>, <code>%:</code>,
        <code>%;</code> or <code>%@</code>), then the UTC offset specified
        in the String is used instead of <var>utcParseOffsetAssumed</var>.</dd></dl><p>
    Explanations of more obscure
    options for UTC offset manipulation appear in the
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytime.js">source file</a>.
  </p><h3>Limitations</h3><p>
    Unlike <a href="#AnyTime.Converter.dayAbbreviations">days</a> and
    <a href="#AnyTime.Converter.monthAbbreviations">months</a>,
    there are not separate labels for time zone abbreviations and
    long names.  <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytimetz.js">anytimetz.js</a>
    can be modified to contain only one or the other, but the library
    does not provide the ability to select between abbreviations
    or long names using different format specifiers, in part because many
    abbreviations are ambiguous.  Separate labels might be added to a
    future version, but no such work is currently underway.
  </p><p>
    There is no automatic detection of daylight savings time
    (AKA summer time), due to lack of support in JavaScript and the
    time-prohibitive <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fen.wikipedia.orgZ22FwikiZ22FTz_database">complexity</a>
    of attempting such support in code
    (alternate time zones are inconsistent from location-to-location
    and year-to-year, and relevant time zone data is updated many
    times per year)!  If you are concerned that users will not know
    whether to select Standard or Daylight/Summer Time for a particular
    date, you can eliminate the Daylight/Summer members from the array,
    and remove the word "Standard" from the Standard labels.  For
    example, instead of:
  </p><pre><code>AnyTime.utcLabel[-300]=[
  'EST--Eastern Standard Time (North America)' ];
AnyTime.utcLabel[-240]=[
  'EDT--Eastern Daylight Time (North America)' ];</code></pre><p>
    modify the array to contain:
  </p><pre><code>AnyTime.utcLabel[-300]=[
    'Eastern Time (North America)' ];</code></pre><p>
    and only use the label (<code>%@</code>) specifier (do not use
    <code>%#</code>, <code>%+</code>, <code>%-</code>, <code>%:</code> or
    <code>%;</code> because the UTC offset will be misrepresented).
    This is an effective solution for most cases, which do not require
    conversion between local time and different time zones.
  </p><h2><a name="converting">Convert</a> Dates to/from Strings
    (including <a name="json">JSON</a> and <a name="xml">XML</a>!)</h2><p><var><strong>AnyTime.Converter</strong></var> can be used independently.
    The following example converts a string in the default date/time format
    into a Date object, then converts the Date into a JSON string (with
    distinct members) and an XML string (using the XML Schema
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.w3.orgZ22FTRZ22Fxmlschema-2Z22FZ223dateTime">dateTime</a> data type and Coordinated
    Universal Time):
  </p><pre><code>var defaultConv = new <a href="#AnyTime.Converter">AnyTime.Converter</a>();
var date = defaultConv.<a href="#AnyTime.Converter.parse">parse</a>("1990-01-06 15:30:00");

var jsonConv = new <a href="#AnyTime.Converter">AnyTime.Converter</a>({<a href="#AnyTime.Converter.format"><var>format</var></a>:
  '{"year":"%Y","month":"%m","day":"%d","hour":"%H","minute":"%i","second":"%s"}'});

var xmlConv = new <a href="#AnyTime.Converter">AnyTime.Converter</a>({<a href="#AnyTime.Converter.utcFormatOffsetImposed"><var>utcFormatOffsetImposed</var></a>: 0,
  <a href="#AnyTime.Converter.format"><var>format</var></a>:"&lt;"+"date&gt;%Y-%m-%dT%H:%i:%s%:&lt;"+"/date&gt;"});

alert( "JSON:\n" + jsonConv.<a href="#AnyTime.Converter.formatMethod">format</a>(date) + "\n\nXML:\n" + xmlConv.<a href="#AnyTime.Converter.formatMethod">format</a>(date) );</code></pre><form method="GET" action="/anytime/"><p class="demo"><input type="button" id="show_me" value="Demonstrate Example"></p></form><script type="text/javascript">
    $("#show_me").click( function(e) {
        var defaultConv = new AnyTime.Converter();
        var date = defaultConv.parse("1990-01-06 15:30:00");
        var jsonConv = new AnyTime.Converter({format:
          '{"year":"%Y","month":"%m","day":"%d","hour":"%H","minute":"%i","second":"%s"}'});
        var xmlConv = new AnyTime.Converter({utcFormatOffsetImposed:0,
          format:"<"+"date>%Y-%m-%dT%H:%i:%s%:<"+"/date>"});
        alert( "JSON:\n" + jsonConv.format(date) + "\n\nXML:\n" + xmlConv.format(date) );
    });
  </script><p><a href="#AnyTime.Converter"><var>AnyTime.Converter</var></a> accepts the following
    <a href="#options"><var>options</var></a>,
    which are the same as for <a href="#AnyTime.picker"><var>AnyTime.picker()</var></a> and
    <a href="#jQuery.AnyTime_picker"><var>jQuery.AnyTime_picker()</var></a>:
    <a href="#AnyTime.Converter.baseYear"><var>baseYear</var></a>,
    <a href="#AnyTime.Converter.dayAbbreviations"><var>dayAbbreviations</var></a>,
    <a href="#AnyTime.Converter.dayNames"><var>dayNames</var></a>,
    <a href="#AnyTime.Converter.eraAbbreviations"><var>eraAbbreviations</var></a>,
    <a href="#AnyTime.Converter.format"><var>format</var></a>,
    <a href="#AnyTime.Converter.monthAbbreviations"><var>monthAbbreviations</var></a> and
    <a href="#AnyTime.Converter.monthNames"><var>monthNames</var></a>.
  </p><p><var>AnyTime.Converter</var> supports all of the same
    <a href="#AnyTime.Converter.format">format</a> field specifiers as <a href="#AnyTime.picker"><var>AnyTime.picker()</var></a> and
    <a href="#jQuery.AnyTime_picker"><var>jQuery.AnyTime_picker()</var></a>.
  </p><p>
    Check the JavaScript
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytime.js" title="download source">source code</a>
    for additional details and instructions.
  </p><h2><a name="extending">Extending </a><strong>Any+Time</strong>&trade; Functionality</h2><p>
    Here are a few examples for extending the basic library functionality.
  </p><h3><a name="rangeSelection">Date-Range Selection, Today and Clear Buttons</a></h3><p>
    In the following example, <a href="#converting"><var>AnyTime.Converter</var></a>
    and <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.jquery.com">jQuery</a> work together to provide date-range selection.
    The value for the second ("<var>Finish</var>") field must be at least one day after
    the date in the first ("<var>Start</var>") field (thanks to the <a href="#AnyTime.picker.earliest">earliest</a> option),
    but no more than 90 days later (thanks to the <a href="#AnyTime.picker.latest">latest</a> option).
    This example also demonstrates a button that sets the first field to the current date,
    a button to clear the fields, and calendar pseudo-buttons using CSS
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.w3.orgZ22FTRZ22FREC-CSS1Z22FZ223color-and-background-properties">background</a> properties.
  </p><pre><code>&lt;style type="text/css"&gt;
  #rangeDemoStart, #rangeDemoFinish {
    background-image:url("<a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22Fcalendar.png" title="right-click to download this image for use with your input field">calendar.png</a>");
    background-position:right center;
    background-repeat:no-repeat; }
&lt;/style&gt;
Start: &lt;input type="text" id="rangeDemoStart" size="14" /&gt;
Finish: &lt;input type="text" id="rangeDemoFinish" size="14" disabled="disabled"/&gt;
&lt;input type="button" id="rangeDemoToday" value="today" /&gt;
&lt;input type="button" id="rangeDemoClear" value="clear" /&gt;
&lt;script type="text/javascript"&gt;
  var oneDay = 24*60*60*1000;
  var rangeDemoFormat = "%e-%b-%Y";
  var rangeDemoConv = new <a href="#AnyTime.Converter">AnyTime.Converter</a>({<a href="#AnyTime.Converter.format">format</a>:rangeDemoFormat});
  $("#rangeDemoToday").click( function(e) {
      $("#rangeDemoStart").val(rangeDemoConv.<a href="#AnyTime.Converter.formatMethod">format</a>(new Date())).change(); } );
  $("#rangeDemoClear").click( function(e) {
      $("#rangeDemoStart").val("").change(); } );
  $("#rangeDemoStart").<a href="#jQuery.AnyTime_picker">AnyTime_picker</a>({format:rangeDemoFormat});
  $("#rangeDemoStart").change( function(e) { try {
      var fromDay = rangeDemoConv.<a href="#AnyTime.Converter.parse">parse</a>($("#rangeDemoStart").val()).getTime();
      var dayLater = new Date(fromDay+oneDay);
      dayLater.setHours(0,0,0,0);
      var ninetyDaysLater = new Date(fromDay+(90*oneDay));
      ninetyDaysLater.setHours(23,59,59,999);
      $("#rangeDemoFinish").
          <a href="#jQuery.AnyTime_noPicker">AnyTime_noPicker</a>().
          removeAttr("disabled").
          val(rangeDemoConv.<a href="#AnyTime.Converter.formatMethod">format</a>(dayLater)).
          <a href="#jQuery.AnyTime_picker">AnyTime_picker</a>(
              { <a href="#AnyTime.picker.earliest">earliest</a>: dayLater,
                <a href="#AnyTime.Converter.format">format</a>: rangeDemoFormat,
                <a href="#AnyTime.picker.latest">latest</a>: ninetyDaysLater
              } );
      } catch(e){ $("#rangeDemoFinish").val("").attr("disabled","disabled"); } } );
&lt;/script&gt;</code></pre><style type="text/css">
    #rangeDemoStart, #rangeDemoFinish {
      background-image:url("calendar.png");
      background-position:right center;
      background-repeat:no-repeat; }
  </style><form method="GET" action="/anytime/"><p class="demo">
      Start: <input type="text" id="rangeDemoStart" size="14"> 
      Finish: <input type="text" id="rangeDemoFinish" size="14" disabled> 
      <input type="button" id="rangeDemoToday" value="today"> 
      <input type="button" id="rangeDemoClear" value="clear"></p></form><script type="text/javascript">
    var oneDay = 24*60*60*1000;
    var rangeDemoFormat = "%e-%b-%Y";
    var rangeDemoConv = new AnyTime.Converter({format:rangeDemoFormat});
    $("#rangeDemoToday").click( function(e) {
        $("#rangeDemoStart").val(rangeDemoConv.format(new Date())).change(); } );
    $("#rangeDemoClear").click( function(e) {
        $("#rangeDemoStart").val("").change(); } );
    $("#rangeDemoStart").AnyTime_picker({format:rangeDemoFormat});
    $("#rangeDemoStart").change( function(e) { try {
        var fromDay = rangeDemoConv.parse($("#rangeDemoStart").val()).getTime();
        var dayLater = (new Date(fromDay+oneDay));
        dayLater.setHours(0,0,0,0);
        var ninetyDaysLater = (new Date(fromDay+(90*oneDay)));
        ninetyDaysLater.setHours(23,59,59,999);
        $("#rangeDemoFinish").
            AnyTime_noPicker().
            removeAttr("disabled").
            val(rangeDemoConv.format(dayLater)).
            AnyTime_picker(
                { earliest: dayLater,
                  format: rangeDemoFormat,
                  latest: ninetyDaysLater
                } );
        } catch(e){ $("#rangeDemoFinish").val("").attr("disabled","disabled"); } } );
  </script><h3><a name="buttonCreationDemo">On-Demand Picker</a></h3><p>
    The following example shows how to create a field that initially does not have
    a picker, followed by a button that creates a picker for the field.  This would be
    useful if you want to allow manual entry into the field, or if you want the user
    to be able to tab through the field without causing the picker to automatically
    fill in the current date/time.
  </p><pre><code>&lt;input type="text" id="ButtonCreationDemoInput"/&gt;
&lt;button id="ButtonCreationDemoButton"&gt;&lt;img src="calendar.png"/&gt;&lt;/button&gt;
&lt;script type="text/javascript"&gt;
  $('#ButtonCreationDemoButton').click( function() {
    $('#ButtonCreationDemoInput').AnyTime_picker().focus();
    $(this).unbind("click"); } );
&lt;/script&gt;</code></pre><p class="demo">
    Date/Time: <input type="text" id="ButtonCreationDemoInput"><button id="ButtonCreationDemoButton"><img src="calendar.png"></button>
    (format must be YYYY-MM-DD HH:MM:SS!)
  </p><script type="text/javascript">
      $('#ButtonCreationDemoButton').click( function() {
        $('#ButtonCreationDemoInput').AnyTime_picker().focus();
        $(this).unbind("click");
        } );
  </script><p><strong>Warning: </strong>because the picker prevents a user from entering a value
    that does not match the required format, it is strongly recommended that you do not
    allow the user to type directly into the field!
  </p><h2><a name="tips">Troubleshooting Tips</a></h2><p>
   Following are some of the most common issues, and how to avoid or solve them.
   Even if you do not experience any problems, these are good rules to follow!
  </p><h3><a name="fixJQueryUI">jQuery UI Issues</a></h3><p><em>Note: </em> The following problems are related specifically to
    jQuery UI (and other jQueryUI plugins), but additional tips in the
    remaining sections also apply to jQuery UI.
  </p><p>
    When using a jQuery UI theme, be sure to include the
    <strong>Any+Time</strong>&trade;
    library <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytime.css">stylesheet</a> also.  For best
    results, include the library stylesheet <strong>before </strong> the
    theme stylesheet.  If you add the theme styles to the library stylesheet,
    place them at the end of the stylesheet for best results.
  </p><p>
    Also be aware that many jQuery UI themes use a <var>background</var> image for the
    <var>ui-widget-content</var> class that is shorter than a typical picker,
    causing the widget to have a "two-tone" background.  If you do not like the
    appearance, modify the property set in the "Component containers" section of your
    theme stylesheet to:
  </p><ul><li>choose a different background color that blends more smoothly with the top of the image;</li><li>remove the <var>background </var><code>url("&hellip;")</code> property for a solid background color;</li><li>make the <code>background repeat</code> in both directions; or</li><li>substitute a taller image.</li></ul><p>
    When using <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.trirand.comZ22FblogZ22F">jqGrid</a> with inline editing: if you open
    a picker and then close the row, the grid does not destroy the picker.
    If you return to the same field, a new picker cannot be created.
    One reported solution is to invoke
    <code>$(&hellip;).AnyTime_noPicker()</code>
    within the <var>oneditfunc</var> of <var>editRow</var>.
  </p><h3><a name="fixDisplay">Display/Layout Issues</a></h3><p>
    Most display/layout problems can be avoided by keeping the browser
    out of <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fen.wikipedia.orgZ22FwikiZ22FQuirks_mode">quirks mode</a>.  Common symptoms
    include groups of buttons appearing in the wrong location, especially
    in older versions of IE.  For best results, be sure to include an appropriate
   <code>&lt;!DOCTYPE&gt;</code>
   declaration as the first line of your HTML page; for example:
  </p><pre><code>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
    "http://www.w3.org/TR/1999/REC-html401-19991224/loose.dtd"&gt;</code></pre><p>
    Any legitimate HTML or XHTML <code>&lt;!DOCTYPE&gt;</code> can be used, as
    long as it is appropriate for the source file.
  </p><p>
    Note that an <code>&lt;input&gt;</code> field must be visible when its
    picker is created, in order to calculate the correct size and location
    (if the field is hidden, the picker might be too small to contain all of
    its buttons). To create a picker for a field that is initially hidden
    (for example, because it is on a collapsed accordian panel or "minimized"
    popup overlay), wait until the first time the field is made visible
    before calling
    <a href="#AnyTime.picker"><var>AnyTime.picker()</var></a> or
    <a href="#jQuery.AnyTime_picker"><var>$.AnyTime_picker()</var></a>.
    For example, you can attach an initial <code>focus()</code> handler to
    the field that instantiates the picker:
  </p><pre><code>&lt;input id="DelayedCreationDemo"&gt;
&lt;script type="text/javascript"&gt;
  $('#DelayedCreationDemo').focus( function() {
    $('#DelayedCreationDemo').unbind('focus').AnyTime_picker(); } );
&lt;/script&gt;</code></pre><p>
   Minor variations in Microsoft Internet Explorer 6 and 7 are to be expected
   due to their broken box model, but nothing should appear too out-of-the-ordinary.
  </p><p>
   Some display problems are related to initialization conflicts with other
   libraries, especially .NET.  These can be resolved using the
   <code>setTimeout()</code> function to delay picker creation until other
   initializations are finished; for example:
  </p><pre><code>setTimeout( function() { <a href="#AnyTime.picker">AnyTime.picker</a>("field1"); }, 1000 );</code></pre><p>
      In some cases, it may be necessary to increase the timeout or use more
      complicated techniques, such as waiting to create the picker when the
      field first receives focus (as previously shown).
  </p><p>
    If the entry field appears within a floating <code>&lt;div&gt;</code> (such as a jQuery UI
    dialog or the jQuery Layout plugin), you may need to adjust the CSS z-index of
    <var>.AnyTime-pkr</var> to be
    greater than the value used for the <code>&lt;div&gt;</code>; for example:
  </p><pre><code>&lt;style type="text/css"&gt;
  .AnyTime-pkr { z-index: 9999 }
&lt;/style&gt;</code></pre><p>
    Be careful to place all <code>&lt;link rel="stylesheet"&gt;</code> and
    <code>&lt;style&gt;</code> elements <strong>before </strong><code>&lt;script&gt;</code> elements, or WebKit-based browsers
    (Apple Safari and Google Chrome) might not format the picker correctly
    (symptoms include extremely-tall pickers and misplaced time buttons).
  </p><p>
    Do not place <code>&lt;script&gt;</code> elements within
    <code>&lt;table&gt;</code> elements.
    They don't belong there, and strange things might happen!
  </p><p>
    All names, IDs and classes in HTML, JavaScript and CSS created by
    <strong>Any+Time</strong>&trade;
    contain the phrase "<var>AnyTime</var>".  To avoid problems related to
    naming conflicts, do not use this sequence of characters in any variables,
    elements or class names.
  </p><h3><a name="fixBehavior">Behavior Issues</a></h3><p>
    If the picker does not appear at all, be sure you are trying create it
    <em>after</em> the text field has been added to the page, either by placing
    your <code>&lt;script&gt;</code> element <em>after </em>the <code>&lt;input&gt;</code>
    element, or using jQuery's <code>$(document).ready()</code> function.
  </p><p>
    Every <code>&lt;input&gt;</code> field for which a picker is to be created
    must have a unique <var>id</var> attribute, even if the picker is created
    by passing a non-ID selector to
    <a href="#jQuery.AnyTime_picker"><var>jQuery.AnyTime_picker()</var></a>.
    An exception might be thrown if the ID is missing.
  </p><p>
    Use
    <a href="#AnyTime.picker"><var><strong>AnyTime.picker()</strong></var></a>
    instead of
    <a href="#jQuery.AnyTime_picker"><var><strong>jQuery.AnyTime_picker()</strong></var></a>
    if the ID for a field contains characters that are misinterpreted
    by jQuery.  For example, JSF (Java Server Faces) has been known to use
    the colon ("<code>:</code>") character in generated IDs, which is used
    by jQuery for pseudo-selectors.
  </p><p>
    If a picker shows today's date/time instead of the value in the
    associated <code>&lt;input&gt;</code> field, check that the format of the
    value matches the <a href="#AnyTime.Converter.format"><var>format</var></a>
    specifier exactly.  The value cannot be interpreted if it does not match
    perfectly!
  </p><p>
    Do not use an HTML entity reference (such as <code>&amp;auml;</code>) in
    a string passed to the
    <a href="#AnyTime.Converter.monthAbbreviations"><var>monthAbbreviations</var></a>
    option; embed the actual character
    (such as &auml;)
    instead.  Be careful to save your source files under the correct encoding,
    or the character may not display correctly in
    all browsers; this often happens when a character code from <var>UTF-8</var>
    is saved with <var>ISO-8859-1</var> encoding (or vice-versa).
  </p><p>
    When using
    <a href="#AnyTime.picker.placement"><var>placement</var></a><code>:"inline"</code>,
    XHTML and a day-of-the-month
    <a href="#AnyTime.Converter.format"><var>format</var></a> specifier
    (<code>"%D"</code>, <code>"%d"</code> or <code>"%e"</code>),
    the <code>&lt;input&gt;</code> may only appear where a <code>&lt;table&gt;</code>
    element is permitted (for example, NOT within a <code>&lt;p&gt;</code> element).
    This is because the picker uses a <code>&lt;table&gt;</code> element to arrange the
    day-of-the-month (calendar) buttons.  Failure to follow this advice may
    result in a JScript "unknown error" from Internet Explorer.
  </p><p>
    When specifying the <a href="#AnyTime.picker.earliest">earliest</a>
    and/or <a href="#AnyTime.picker.latest">latest</a> option, be certain to
    include a time value, even if the user is only able to select the date.
    The time for an "earliest" date should be <code>00:00:00</code>, and the
    time for a "latest" date should be <code>23:59:59</code>
    (refer to the
    <a href="#AnyTime.picker.ajaxOptions"><var>ajaxOptions</var></a> example).
    This is because the Date objects used by the picker reflect exact moments
    in time, regardless of which fields are specified by the
    <a href="#AnyTime.Converter.format"><var>format</var></a>.  Failure to set
    the time could result in incorrect enforcement if, for example, the page
    is loaded at 23:59 one day, but the field not changed until 00:01 the day
    after!
  </p><p>
    Only use the <a href="#AnyTime.picker.hideInput"><var>hideInput</var></a>
    option to hide the <code>&lt;input&gt;</code> associated with a picker.
    Traditional techniques (such as setting <code>display:none</code>)
    will cause the picker to behave incorrectly.
  </p><p>
    Some older versions of <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.jquery.com">jQuery</a> are incompatible
    with <strong>Any+Time</strong>&trade;.
    JavaScript errors, often involving <code>null</code> or <code>undefined</code>
    objects, may result.  After installing an updated version of jQuery, be sure
    to clear the browser cache so the new version is loaded.
  </p><p>
    All names, IDs and classes in HTML, JavaScript and CSS created by
    <strong>Any+Time</strong>&trade;
    contain the phrase "<var>AnyTime</var>".  To avoid problems related to
    naming conflicts, do not use this sequence of characters in any variables,
    elements or class names.
  </p><h3><a name="fixValid">Validation Issues</a></h3><p>
    It should go without saying that
    <strong>Any+Time</strong>&trade;
    only works in browsers with JavaScript enabled.  Any server-side form
    processing should validate every value it receives, in case JavaScript
    was disabled or otherwise unavailable when the form was submitted.
  </p><p>
    Remember that two-digit years (<code>"%y"</code>) are susceptible to the
    Y2K problem! For best results, use four-digit or variable-length years
    (<code>"%Y"</code>, <code>"%Z"</code> or <code>"%z"</code>) instead.
    The <a href="#AnyTime.Converter.baseYear"><var>baseYear</var></a> option
    can also be helpful in situations where <code>"%y"</code> is required.
    When using <var>baseYear</var>, you should also specify the
    <a href="#AnyTime.picker.earliest"><var>earliest</var></a> and
    <a href="#AnyTime.picker.latest"><var>latest</var></a> options to the
    first and last dates in the century, respectively.
  </p><h3><a name="fixOther">Other Issues</a></h3><p>
    If you use <code>runat=server</code> on an input field,
    you may have to reference the field as <code><i>name</i>.ClientID</code> 
    within your JavaScript code.
  </p><p>
    To reduce memory leaks, always call
    <a href="#AnyTime.noPicker"><var><strong>AnyTime.noPicker()</strong></var></a> (or
    the <var>.<a href="#jQuery.AnyTime_noPicker">AnyTime_noPicker</a>()</var> extension to jQuery) to remove
    the date/time picker from an <code>&lt;input&gt;</code> field before removing
    the field, for example:
  </p><pre><code>AnyTime.<a href="#AnyTime.noPicker">noPicker</a>("field1");
$("#field1").remove();
$("#field2").<a href="#jQuery.AnyTime_noPicker">AnyTime_noPicker</a>().remove();  </code></pre><p>
    This is especially necessary before adding a picker to a field with the same ID
    as a previously-removed field that also had a picker, because
    <strong>Any+Time</strong>&trade;
    will not create more than one picker per ID.  This might be the case,
    for example, when using a postback in the ASP.NET Ajax Control Toolkit.
  </p><p>
   The JavaScript source files include an intrusive <code>alert()</code> call on
   the last line, to discourage hot-linking to this server.  When you download
   a source file, be sure to remove the last line to eliminate annoying messages
   when your HTML page is loaded!
  </p><p><strong>Any+Time</strong>&trade;
    follows <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=httpZ23AZ22FZ22Fwww.w3.orgZ22FTRZ22F2009Z22FWD-wai-aria-practices-20091215Z22FZ223datepicker">WIA-ARIA Authoring Practices 1.0</a>
    for Date Picker keyboard interaction as closely as possible, to
    maximize accessibility without a mouse.
    However, if a user reports difficulty changing a date/time value
    using the picker (for example, due to problems with a "screen reader" or
    other assistive technology), ask them to disable JavaScript and carefully
    type the value into the input field. Again, be sure to validate the input
    when it is received by the server.
  </p><p>
   If you experience any other problems, please
   <a href="http://www.ama3.com/doorkeeper/">contact the author</a>.
  </p><h2>Interface Reference</h2><p><strong>Any+Time</strong>&trade;
    provides the following public objects and methods.  Check the
    <a href="http://www.ama3.com/PxStandard/PxClickAway.php?url=Z22FanytimeZ22FAnyTimeZ22Fanytime.js">source code</a> for additional methods
    that are not intended for general use, but potentially-helpful to
    more advanced web developers.
  </p><dl><dt><a name="AnyTime.Converter"><code>(Object) new AnyTime.Converter( Object <a href="#options"><var>options</var></a> )</code></a></dt><dd>
       Creates an object for parsing Strings into Dates and formatting Dates as Strings,
       using the specified <a href="#options"><var>options</var></a>.
    </dd><dt><a name="AnyTime.Converter.formatMethod"><code>(String) AnyTime.Converter.format( Date date )</code></a></dt><dd>
       Returns a String representing the specified Date.
    </dd><dt><a name="AnyTime.Converter.parse"><code>(Date) AnyTime.Converter.parse( String string )</code></a></dt><dd>
       Returns a Date represented by the specifed string.
    </dd><dt><a name="AnyTime.noPicker"><code>(void) AnyTime.noPicker( String input_id )</code></a></dt><dd>
       Removes the picker associated with the <code>&lt;input&gt;</code> having the
       specified ID, and cleans up the memory used by the widget.
    </dd><dt><a name="AnyTime.picker"><code>(void) AnyTime.picker( String input_id, Object <a href="#options"><var>options</var></a> )</code></a></dt><dd>
       Creates a date and/or time picker for the <code>&lt;input&gt;</code> having the
       specified ID, according to the specified <a href="#options"><var>options</var></a>.
    </dd><dt><a name="jQuery.AnyTime_noPicker"><code>(jQuery) jQuery.AnyTime_noPicker()</code></a></dt><dd>
       Removes the pickers associated with each of the elements selected by jQuery.
       Refer to the <a href="#extending">extending</a> example.
    </dd><dt><a name="jQuery.AnyTime_picker"><code>(jQuery) jQuery.AnyTime_picker( Object <a href="#options"><var>options</var></a> )</code></a></dt><dd>
       Creates a date and/or time picker for each of the elements selected by jQuery
       according to the specified <a href="#options"><var>options</var></a>.
    </dd></dl><h2>Share Your Success!</h2><p>
    If you find
      <strong>Any+Time</strong>&trade;
    useful, please tell your colleagues and promote
    the library in your favorite forums, blogs and other social networks!
  </p><p>
    Both positive feedback and constructive criticism are also appreciated
    (please <a href="http://www.ama3.com/doorkeeper/">contact the author</a>).
  </p></div></div></div><div class="pageBottom"><div class="pageContainerExtension"></div><div class="notice">Copyright 2011 AJAX, JSON and XML Consulting and Training by Andrew M. Andrews III (SM). All Rights Reserved.  "Andrew M. Andrews III", "AMA3", Andrew_M_Andrews_III, Any+Time and the Tre Design are trademarks and/or service marks of Andrew M. Andrews III. Use this site at your own risk. Use of this site for illegal or malicious purposes is prohibited.</div></div></body></html>
